/***********************************************************************
**** Log system
***********************************************************************/

#ifndef CETECH_LOG_H
#define CETECH_LOG_H


/***********************************************************************
**** Includes
***********************************************************************/

#include <time.h>
#include <stdint.h>
#include <stdarg.h>

#define ATTR_FORMAT(fmt, args) __attribute__ ((format(printf, fmt, args)))

/***********************************************************************
**** Enums
***********************************************************************/

enum log_level {
    LOG_INFO = 0,
    LOG_DBG = 1,
    LOG_WARNING = 2,
    LOG_ERROR = 3,
};


/***********************************************************************
**** Typedef
***********************************************************************/

/***********************************************************************
**** Handler callback.
***********************************************************************/
typedef void (*log_handler_t)(enum log_level level,
                              time_t time,
                              char worker_id,
                              const char *where,
                              const char *msg,
                              void *data);

/***********************************************************************
**** Worker id callback.
***********************************************************************/
typedef char (*log_get_wid_clb_t)();


/***********************************************************************
**** Interface
***********************************************************************/

/***********************************************************************
**** Init log system.
***********************************************************************/
void log_init(log_get_wid_clb_t get_wid_clb);

/***********************************************************************
**** Shutdown log system.
***********************************************************************/
void log_shutdown();

/***********************************************************************
**** Register log handler.
***********************************************************************/
void log_register_handler(log_handler_t hander, void *data);

/***********************************************************************
**** Info
***********************************************************************/
void log_info(const char *where,
              const char *format,
              ...) ATTR_FORMAT(2, 3);

void log_info_va(const char *where,
                 const char *format,
                 va_list va);

/***********************************************************************
**** Warning
***********************************************************************/
void log_warning(const char *where,
                 const char *format,
                 ...) ATTR_FORMAT(2, 3);

void log_warning_va(const char *where,
                    const char *format,
                    va_list va);

/***********************************************************************
**** Error
***********************************************************************/
void log_error(const char *where,
               const char *format,
               ...) ATTR_FORMAT(2, 3);

void log_error_va(const char *where,
                  const char *format,
                  va_list va);

/***********************************************************************
**** Debug
***********************************************************************/
void log_debug(const char *where,
               const char *format,
               ...) ATTR_FORMAT(2, 3);

void log_debug_va(const char *where,
                  const char *format,
                  va_list va);

#endif //CETECH_LOG_H
