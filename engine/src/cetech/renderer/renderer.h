#pragma once

/*******************************************************************************
**** Includes
*******************************************************************************/

#include <cinttypes>

#include "celib/string/types.h"
#include "celib/memory/types.h"

#include "celib/window/window.h"

/*******************************************************************************
**** Interface
*******************************************************************************/
namespace cetech {

    /***************************************************************************
    **** Renderer
    ***************************************************************************/
    namespace renderer {

        /***********************************************************************
        **** Render type enum.
        ***********************************************************************/
        struct RenderType {
            enum Enum {
                Null = 0,

                Direct3D9,
                Direct3D11,
                Direct3D12,
                Metal,
                OpenGLES,
                OpenGL,
                Vulkan,

                Count
            };
        };


        /***********************************************************************
        **** Init renderer.
        ***********************************************************************/
        void init(Window window,
                  RenderType::Enum render_type);

        /***********************************************************************
        **** Begin frame.
        ***********************************************************************/
        void begin_frame();

        /***********************************************************************
        **** End frame.
        ***********************************************************************/
        void end_frame();

        /***********************************************************************
        **** Resize viewport.
        ***********************************************************************/
        void resize(uint32_t w,
                    uint32_t h);
    }


    /***************************************************************************
    **** Renderer globals function.
    ***************************************************************************/
    namespace renderer_globals {

        /***********************************************************************
        **** Init system.
        ***********************************************************************/
        void init();

        /***********************************************************************
        **** Shutdown system.
        ***********************************************************************/
        void shutdown();
    }
}
