#pragma once

/*******************************************************************************
**** Includes
*******************************************************************************/

#include "celib/defines.h"
#include "celib/math_types.h"

/*******************************************************************************
**** Interface
*******************************************************************************/
namespace cetech {

    /***************************************************************************
    **** Mouse input manager.
    ***************************************************************************/
    namespace mouse {

        /***********************************************************************
        **** Get button_name index.
        ***********************************************************************/
        uint32_t button_index(const char* button_name);

        /***********************************************************************
        **** Get button_index name.
        ***********************************************************************/
        const char* button_name(const uint32_t button_index);


        /***********************************************************************
        **** Button state in curent frame.
        ***********************************************************************/
        bool button_state(const uint32_t button_index);

        /***********************************************************************
        **** Is button pressed in curent frame. Last frame: 0, Curent: 1
        ***********************************************************************/
        bool button_pressed(const uint32_t button_index);

        /***********************************************************************
        **** Is button released in curent frame. Last frame: 1, Curent: 0
        ***********************************************************************/
        bool button_released(const uint32_t button_index);

        /***********************************************************************
        **** Mouse position
        ***********************************************************************/
        Vector2 axis();
    };

    /***************************************************************************
    **** Log mouse globals function.
    ***************************************************************************/
    namespace mouse_globals {

        /***********************************************************************
        **** Init system.
        ***********************************************************************/
        void init();

        /***********************************************************************
        **** Shutdown system.
        ***********************************************************************/
        void process_mouse();
    }
}
